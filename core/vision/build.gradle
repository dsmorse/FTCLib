apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'

android {
    namespace "com.arcrobotics.ftclib.vision"
}

dependencies {
    api 'org.openftc:easyopencv:1.7.3'
    implementation 'org.openftc:apriltag:2.1.0'
    implementation "androidx.core:core-ktx:1.7.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

def groupId = 'com.arcrobotics.ftclib'
def artifactId = 'vision'
def version = '2.1.0'

def localReleaseDest = "${buildDir}/release/${version}"
def releaseStorageDir = "${projectDir}/ReleaseStorage"
def localReleaseCopyDest = "${releaseStorageDir}/current"
def pastReleaseStorageDest = "${releaseStorageDir}/releases"

task androidJavadocs(type: Javadoc) {
    failOnError = false
    source = android.sourceSets.main.java.srcDirs
    ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
    classpath += files(ext.androidJar)
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    archiveClassifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = project.PUBLISH_GROUP_ID
            artifactId = project.PUBLISH_ARTIFACT_ID
            version = project.PUBLISH_VERSION
        }
    }
    repositories {
        maven {
            name = 'localRelease'  // Added name for the repository
            url = uri("file://${localReleaseDest}")
        }
    }
}

task zipRelease(type: Zip) {
    from localReleaseDest
    destinationDirectory = buildDir
    archiveFileName = "release-${version}.zip"
}

task generateRelease {
    doLast {
        copy {
            from "${buildDir}/release-${version}.zip"
            into(localReleaseCopyDest)
        }
        copy {
            from "${localReleaseCopyDest}/release-${version}.zip"
            into(pastReleaseStorageDest)
        }

        println "Release ${version} can be found at ${localReleaseDest}/"
        println "Release ${version} zipped can be found ${buildDir}/release-${version}.zip"
        println "Release ${version} has also been stored at ${localReleaseCopyDest}"
        println "Past releases can be found at ${pastReleaseStorageDest}"
    }
}

generateRelease.dependsOn('publish')
generateRelease.dependsOn(zipRelease)

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}


apply from: '../dependencies.gradle'
repositories {
    mavenCentral()
}
